#!/bin/sh
if [ -z "$INITIALIZING_REPO" ]; then
    export INITIALIZING_REPO=1
    # we need to run this script inside an environment loaded by direnv
    # this uses the direnv for the bin dir
    # assuming there is no $root/bin/.envrc,
    # this will load the root direnv from $root/.envrc, as desired
    # FROM: https://stackoverflow.com/questions/4774054/reliable-way-for-a-bash-script-to-get-the-full-path-to-itself
    bin_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    this_script="${bin_dir}/$(basename "${BASH_SOURCE[0]}")"
    direnv allow "${bin_dir}/.envrc" # make sure the root .envrc is allowed so we can direnv exec
    direnv exec "$bin_dir" "$this_script"
    exit $?
fi
cd "$root"
bold="$(tput bold)"
normal="$(tput sgr0)"
if git remote -v | grep -q paulssonlab/paulssonlab; then
    # cloned from paulssonlab account, fork
    gh repo fork --remote=true --remote-name=origin
    status=$?
    if [ $status != 0 ] ; then
        echo "❌  ${bold}Could not fork repo, aborting.${normal}"
        exit 1
    fi
else
    # cloned from personal account, add upstream remote
    git remote add upstream git@github.com:paulssonlab/paulssonlab.git
fi
# make paulssonlab conda env
"${root}/bin/direnv-allowall"
# check that direnv loaded/conda env was created
envname_file=.envname
if [ ! -f "$envname_file" ] || [ $CONDA_DEFAULT_ENV != "$(cat "$envname_file")" ]; then
    echo "❌  ${bold}Conda environment was not created/activated successfully, aborting.${normal}"
    exit 1
fi
# install pre-commit hooks
echo "🔱  ${bold}Installing git hooks${normal}"
pre-commit install --install-hooks &&
    pre-commit install --install-hooks -t commit-msg
status=$?
if [ $status != 0 ] ; then
    echo "❌  pre-commit install${bold}failed, aborting.${normal}"
    exit $status
fi
# run git status (so git builds its cache before we install the nbcleanse filter)
git status > /dev/null
# install nbcleanse
if [ ! -d .nbcleanse ]; then
    echo "💾  ${bold}Installing nbcleanse to ${normal}${root}/.nbcleanse"
    git clone git@github.com:shenker/nbcleanse.git "${root}/.nbcleanse"
fi
nbcleanse_conda_env=nbcleanse # in case we want to change this
ensure_mamba env remove -n "${nbcleanse_conda_env}" &> /dev/null
ensure_mamba env create -n "${nbcleanse_conda_env}" -f "${root}/.nbcleanse/environment.yml"
conda run -n "${nbcleanse_conda_env}" python "${root}/.nbcleanse/nbcleanse.py" install --conda "${nbcleanse_conda_env}"
