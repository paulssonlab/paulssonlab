IMAGE_CORRECTION:
    # Subtract this value from every pixel
    background: 110

# TODO: double check the values below, I guess-timated them!
# TODO: allow these to be None, in which case the algo. tries to estimate them?? Would be cool!
# But would also then be wise to have a way to record whatever the values ending up being... (except for channel & method)
TRENCHES:
    # Typical 40x experiments have 2 rows, 100x experiments have 1 row
    num_rows: 1

    # Trench length, in microns; use pixel_microns to convert to pixels
    trench_length: 25.0 # 500 pixels @ 100x; Poor medium chip

    # Trench width, in microns; use pixel_microns to convert to pixels, and round to integer number.
    trench_width: 1.5 # 30 pixels @ 100x; Poor medium chip

    # Minimum distance between peaks, in microns; use pixel_microns to convert to pixels
    min_distance: 1.0 # 25 pixels @ 100x

    # Normalized trench cutoff (0 - 1) for peak values, after unsharp mask
    cutoff: 0.35 # Normalized units

    # Use this channel to detect trenches
    channel: "Phase"

    # Which method to use? Options are:
    # intensity_peaks (e.g. phase images)
    # clustering (e.g. fluorescence images) (NOTE: UNIMPLEMENTED!)
    # NOTE: what about the different params associated with these algorithms?
    method: "intensity_peaks"
