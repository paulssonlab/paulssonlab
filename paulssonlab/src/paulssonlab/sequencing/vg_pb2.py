# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: vg.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2

DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x08vg.proto\x12\x02vg\x1a\x1cgoogle/protobuf/struct.proto"O\n\x05Graph\x12\x16\n\x04node\x18\x01 \x03(\x0b\x32\x08.vg.Node\x12\x16\n\x04\x65\x64ge\x18\x02 \x03(\x0b\x32\x08.vg.Edge\x12\x16\n\x04path\x18\x03 \x03(\x0b\x32\x08.vg.Path"2\n\x04Node\x12\x10\n\x08sequence\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\n\n\x02id\x18\x03 \x01(\x03"U\n\x04\x45\x64ge\x12\x0c\n\x04\x66rom\x18\x01 \x01(\x03\x12\n\n\x02to\x18\x02 \x01(\x03\x12\x12\n\nfrom_start\x18\x03 \x01(\x08\x12\x0e\n\x06to_end\x18\x04 \x01(\x08\x12\x0f\n\x07overlap\x18\x05 \x01(\x05"@\n\x04\x45\x64it\x12\x13\n\x0b\x66rom_length\x18\x01 \x01(\x05\x12\x11\n\tto_length\x18\x02 \x01(\x05\x12\x10\n\x08sequence\x18\x03 \x01(\t"O\n\x07Mapping\x12\x1e\n\x08position\x18\x01 \x01(\x0b\x32\x0c.vg.Position\x12\x16\n\x04\x65\x64it\x18\x02 \x03(\x0b\x32\x08.vg.Edit\x12\x0c\n\x04rank\x18\x05 \x01(\x03"M\n\x08Position\x12\x0f\n\x07node_id\x18\x01 \x01(\x03\x12\x0e\n\x06offset\x18\x02 \x01(\x03\x12\x12\n\nis_reverse\x18\x04 \x01(\x08\x12\x0c\n\x04name\x18\x05 \x01(\t"W\n\x04Path\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x1c\n\x07mapping\x18\x02 \x03(\x0b\x32\x0b.vg.Mapping\x12\x13\n\x0bis_circular\x18\x03 \x01(\x08\x12\x0e\n\x06length\x18\x04 \x01(\x03"\xea\x06\n\tAlignment\x12\x10\n\x08sequence\x18\x01 \x01(\t\x12\x16\n\x04path\x18\x02 \x01(\x0b\x32\x08.vg.Path\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x0f\n\x07quality\x18\x04 \x01(\x0c\x12\x17\n\x0fmapping_quality\x18\x05 \x01(\x05\x12\r\n\x05score\x18\x06 \x01(\x05\x12\x16\n\x0equery_position\x18\x07 \x01(\x05\x12\x13\n\x0bsample_name\x18\t \x01(\t\x12\x12\n\nread_group\x18\n \x01(\t\x12$\n\rfragment_prev\x18\x0b \x01(\x0b\x32\r.vg.Alignment\x12$\n\rfragment_next\x18\x0c \x01(\x0b\x32\r.vg.Alignment\x12\x14\n\x0cis_secondary\x18\x0f \x01(\x08\x12\x10\n\x08identity\x18\x10 \x01(\x01\x12\x1a\n\x08\x66ragment\x18\x11 \x03(\x0b\x32\x08.vg.Path\x12\x18\n\x05locus\x18\x12 \x03(\x0b\x32\t.vg.Locus\x12\x1c\n\x06refpos\x18\x13 \x03(\x0b\x32\x0c.vg.Position\x12\x13\n\x0bread_paired\x18\x14 \x01(\x08\x12\x13\n\x0bread_mapped\x18\x15 \x01(\x08\x12\x15\n\rmate_unmapped\x18\x16 \x01(\x08\x12\x1e\n\x16read_on_reverse_strand\x18\x17 \x01(\x08\x12\x1e\n\x16mate_on_reverse_strand\x18\x18 \x01(\x08\x12\x14\n\x0csoft_clipped\x18\x19 \x01(\x08\x12\x1e\n\x16\x64iscordant_insert_size\x18\x1a \x01(\x08\x12\x12\n\nuniqueness\x18\x1b \x01(\x01\x12\x0f\n\x07\x63orrect\x18\x1c \x01(\x01\x12\x17\n\x0fsecondary_score\x18\x1d \x03(\x05\x12\x16\n\x0e\x66ragment_score\x18\x1e \x01(\x01\x12(\n mate_mapped_to_disjoint_subgraph\x18\x1f \x01(\x08\x12$\n\x1c\x66ragment_length_distribution\x18  \x01(\t\x12\x11\n\ttime_used\x18# \x01(\x01\x12 \n\nto_correct\x18$ \x01(\x0b\x32\x0c.vg.Position\x12\x18\n\x10\x63orrectly_mapped\x18% \x01(\x08\x12+\n\nannotation\x18\x64 \x01(\x0b\x32\x17.google.protobuf.StructJ\x04\x08\x08\x10\tJ\x04\x08!\x10#"\xfb\x01\n\x12MultipathAlignment\x12\x10\n\x08sequence\x18\x01 \x01(\t\x12\x0f\n\x07quality\x18\x02 \x01(\x0c\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x13\n\x0bsample_name\x18\x04 \x01(\t\x12\x12\n\nread_group\x18\x05 \x01(\t\x12\x1c\n\x07subpath\x18\x06 \x03(\x0b\x32\x0b.vg.Subpath\x12\x17\n\x0fmapping_quality\x18\x07 \x01(\x05\x12\r\n\x05start\x18\x08 \x03(\r\x12\x18\n\x10paired_read_name\x18\t \x01(\t\x12+\n\nannotation\x18\x64 \x01(\x0b\x32\x17.google.protobuf.Struct"b\n\x07Subpath\x12\x16\n\x04path\x18\x01 \x01(\x0b\x32\x08.vg.Path\x12\x0c\n\x04next\x18\x02 \x03(\r\x12\r\n\x05score\x18\x03 \x01(\x05\x12"\n\nconnection\x18\x04 \x03(\x0b\x32\x0e.vg.Connection")\n\nConnection\x12\x0c\n\x04next\x18\x01 \x01(\r\x12\r\n\x05score\x18\x02 \x01(\x05"R\n\tKmerMatch\x12\x10\n\x08sequence\x18\x01 \x01(\t\x12\x0f\n\x07node_id\x18\x02 \x01(\x03\x12\x10\n\x08position\x18\x03 \x01(\x11\x12\x10\n\x08\x62\x61\x63kward\x18\x04 \x01(\x08"S\n\nBasePileup\x12\x10\n\x08ref_base\x18\x01 \x01(\x05\x12\x11\n\tnum_bases\x18\x02 \x01(\x05\x12\r\n\x05\x62\x61ses\x18\x03 \x01(\t\x12\x11\n\tqualities\x18\x04 \x01(\x0c"B\n\nNodePileup\x12\x0f\n\x07node_id\x18\x01 \x01(\x03\x12#\n\x0b\x62\x61se_pileup\x18\x02 \x03(\x0b\x32\x0e.vg.BasePileup"e\n\nEdgePileup\x12\x16\n\x04\x65\x64ge\x18\x01 \x01(\x0b\x32\x08.vg.Edge\x12\x11\n\tnum_reads\x18\x02 \x01(\x05\x12\x19\n\x11num_forward_reads\x18\x03 \x01(\x05\x12\x11\n\tqualities\x18\x04 \x01(\x0c"T\n\x06Pileup\x12$\n\x0cnode_pileups\x18\x01 \x03(\x0b\x32\x0e.vg.NodePileup\x12$\n\x0c\x65\x64ge_pileups\x18\x02 \x03(\x0b\x32\x0e.vg.EdgePileup"\xfa\x01\n\x05Snarl\x12\x1b\n\x04type\x18\x01 \x01(\x0e\x32\r.vg.SnarlType\x12\x18\n\x05start\x18\x02 \x01(\x0b\x32\t.vg.Visit\x12\x16\n\x03\x65nd\x18\x03 \x01(\x0b\x32\t.vg.Visit\x12\x19\n\x06parent\x18\x04 \x01(\x0b\x32\t.vg.Snarl\x12\x0c\n\x04name\x18\x05 \x01(\t\x12\x1c\n\x14start_self_reachable\x18\x06 \x01(\x08\x12\x1a\n\x12\x65nd_self_reachable\x18\x07 \x01(\x08\x12\x1b\n\x13start_end_reachable\x18\x08 \x01(\x08\x12"\n\x1a\x64irected_acyclic_net_graph\x18\t \x01(\x08"R\n\x05Visit\x12\x0f\n\x07node_id\x18\x01 \x01(\x03\x12\x18\n\x05snarl\x18\x02 \x01(\x0b\x32\t.vg.Snarl\x12\x0c\n\x04name\x18\x04 \x01(\t\x12\x10\n\x08\x62\x61\x63kward\x18\x03 \x01(\x08"8\n\x0eSnarlTraversal\x12\x18\n\x05visit\x18\x01 \x03(\x0b\x32\t.vg.Visit\x12\x0c\n\x04name\x18\x02 \x01(\t"\xb2\x01\n\x05Locus\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x18\n\x06\x61llele\x18\x02 \x03(\x0b\x32\x08.vg.Path\x12\x1c\n\x07support\x18\x03 \x03(\x0b\x32\x0b.vg.Support\x12\x1e\n\x08genotype\x18\x04 \x03(\x0b\x32\x0c.vg.Genotype\x12$\n\x0foverall_support\x18\x05 \x01(\x0b\x32\x0b.vg.Support\x12\x1d\n\x15\x61llele_log_likelihood\x18\x06 \x03(\x01"\x83\x01\n\x08Genotype\x12\x0e\n\x06\x61llele\x18\x01 \x03(\x05\x12\x11\n\tis_phased\x18\x02 \x01(\x08\x12\x12\n\nlikelihood\x18\x03 \x01(\x01\x12\x16\n\x0elog_likelihood\x18\x04 \x01(\x01\x12\x11\n\tlog_prior\x18\x05 \x01(\x01\x12\x15\n\rlog_posterior\x18\x06 \x01(\x01"Y\n\x07Support\x12\x0f\n\x07quality\x18\x01 \x01(\x01\x12\x0f\n\x07\x66orward\x18\x02 \x01(\x01\x12\x0f\n\x07reverse\x18\x03 \x01(\x01\x12\x0c\n\x04left\x18\x04 \x01(\x01\x12\r\n\x05right\x18\x05 \x01(\x01"n\n\x0fLocationSupport\x12\x1c\n\x07support\x18\x01 \x01(\x0b\x32\x0b.vg.Support\x12\x18\n\x04\x65\x64ge\x18\x02 \x01(\x0b\x32\x08.vg.EdgeH\x00\x12\x11\n\x07node_id\x18\x03 \x01(\x03H\x00\x42\x10\n\x0eoneof_location";\n\x0bTranslation\x12\x16\n\x04\x66rom\x18\x01 \x01(\x0b\x32\x08.vg.Path\x12\x14\n\x02to\x18\x02 \x01(\x0b\x32\x08.vg.Path*9\n\tSnarlType\x12\x10\n\x0cUNCLASSIFIED\x10\x00\x12\x0f\n\x0bULTRABUBBLE\x10\x01\x12\t\n\x05UNARY\x10\x02\x62\x06proto3'
)

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, "vg_pb2", _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
    DESCRIPTOR._options = None
    _globals["_SNARLTYPE"]._serialized_start = 3255
    _globals["_SNARLTYPE"]._serialized_end = 3312
    _globals["_GRAPH"]._serialized_start = 46
    _globals["_GRAPH"]._serialized_end = 125
    _globals["_NODE"]._serialized_start = 127
    _globals["_NODE"]._serialized_end = 177
    _globals["_EDGE"]._serialized_start = 179
    _globals["_EDGE"]._serialized_end = 264
    _globals["_EDIT"]._serialized_start = 266
    _globals["_EDIT"]._serialized_end = 330
    _globals["_MAPPING"]._serialized_start = 332
    _globals["_MAPPING"]._serialized_end = 411
    _globals["_POSITION"]._serialized_start = 413
    _globals["_POSITION"]._serialized_end = 490
    _globals["_PATH"]._serialized_start = 492
    _globals["_PATH"]._serialized_end = 579
    _globals["_ALIGNMENT"]._serialized_start = 582
    _globals["_ALIGNMENT"]._serialized_end = 1456
    _globals["_MULTIPATHALIGNMENT"]._serialized_start = 1459
    _globals["_MULTIPATHALIGNMENT"]._serialized_end = 1710
    _globals["_SUBPATH"]._serialized_start = 1712
    _globals["_SUBPATH"]._serialized_end = 1810
    _globals["_CONNECTION"]._serialized_start = 1812
    _globals["_CONNECTION"]._serialized_end = 1853
    _globals["_KMERMATCH"]._serialized_start = 1855
    _globals["_KMERMATCH"]._serialized_end = 1937
    _globals["_BASEPILEUP"]._serialized_start = 1939
    _globals["_BASEPILEUP"]._serialized_end = 2022
    _globals["_NODEPILEUP"]._serialized_start = 2024
    _globals["_NODEPILEUP"]._serialized_end = 2090
    _globals["_EDGEPILEUP"]._serialized_start = 2092
    _globals["_EDGEPILEUP"]._serialized_end = 2193
    _globals["_PILEUP"]._serialized_start = 2195
    _globals["_PILEUP"]._serialized_end = 2279
    _globals["_SNARL"]._serialized_start = 2282
    _globals["_SNARL"]._serialized_end = 2532
    _globals["_VISIT"]._serialized_start = 2534
    _globals["_VISIT"]._serialized_end = 2616
    _globals["_SNARLTRAVERSAL"]._serialized_start = 2618
    _globals["_SNARLTRAVERSAL"]._serialized_end = 2674
    _globals["_LOCUS"]._serialized_start = 2677
    _globals["_LOCUS"]._serialized_end = 2855
    _globals["_GENOTYPE"]._serialized_start = 2858
    _globals["_GENOTYPE"]._serialized_end = 2989
    _globals["_SUPPORT"]._serialized_start = 2991
    _globals["_SUPPORT"]._serialized_end = 3080
    _globals["_LOCATIONSUPPORT"]._serialized_start = 3082
    _globals["_LOCATIONSUPPORT"]._serialized_end = 3192
    _globals["_TRANSLATION"]._serialized_start = 3194
    _globals["_TRANSLATION"]._serialized_end = 3253
# @@protoc_insertion_point(module_scope)
